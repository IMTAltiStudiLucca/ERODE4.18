package it.imt.erode.importing.flowstar;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

public class FlowStar {

	
	public static void main(String[] args) throws IOException {
		FlowStar fs = new FlowStar();
		String init="";
		
		/*fs.convertDrift(2,7);
		init="100.0,100.0,0.00010,0.00010,0.00010,9.995,10.005";
		fs.printInit(init);*/
		
		/*fs.convertDrift(3,12);
		init="100.0,100.0,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,9.995,10.0,10.005";
		fs.printInit(init);*/
		
		/*fs.convertDrift(5,38);
		init="100.0,100.0,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,9.9995,9.9998,10.0,10.0002,10.0005";
		fs.printInit(init);*/
		
		/*fs.convertDrift(6,71);
		init
		fs.printInit(init);*/
		
		/*fs.convertDrift(7,136);
		init="100.0,100.0,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,0.00010,9.99995,9.99998,9.99999,10.0,10.00001,10.00002,10.00005";
		fs.printInit(init);*/
		
		fs.convertDrift(8,265);
		init
		fs.printInit(init);
	}
	
	public void convertDrift(int n,int nVars) throws IOException{
		
		InputStream is = getClass().getResourceAsStream("sites"+n+".txt");
		BufferedReader br = new BufferedReader(new InputStreamReader(is));
		String line=br.readLine();
		while(line!=null){
			for(int i=1;i<=nVars;i++){
				line=line.replace("dy("+i+")", "y"+i+"'");
				line=line.replace("y("+i+")", "y"+i);
				line=line.replace(";", "");
			}
			System.out.println(line);
			System.out.println();
			line=br.readLine();
		}
		br.close();
	}
	
	public void printInit(String init){
		String[] split=init.split("\\,");
		for(int i=0;i<split.length;i++){
			System.out.println("        y"+(i+1)+",");
		}
		System.out.println("\n\n\n\n");
		for(int i=0;i<split.length;i++){
			System.out.println("      y"+(i+1)+" in ["+split[i]+","+split[i]+"]");
		}
	}
}
